20221102_study


-프로그래밍언어



CH.5 컴파일러 개요


구문부석 

-LR 구문분석
    Left to Right Scanning, Right parse


    Top down parsing = LL 문제 해결 필요 : Left Recursion을 다 제거해야되고, Left factoring을 해줘야함.
        left factoring = 문법 오류 수정

    Bottom up parsing = LR = string -> start symbol.

    LR심볼을 쓰는 적극적이유 3가지
        -대부분의 프로그래밍 언어에 적용 가능
        -LL에 비해 일반적
        -구문 에러 가능한 한탐지함.

    방법 3개 -> 별로 안중요

    Shift-reduce parsing이 메이저하다.

    LR parsing의 class. CLR LALR SLR 순으로 포함함. SLR이 제일 작음.
    가장 많이 쓰이는 건 LALR.
    이 정도만 알아둘 것.




CH.6 변수, 바인딩, 식 및 제어문


Go-to 문이 남아있는 이유?
쓰지 않고는 만들 수 없는 알고리즘이 존재하기 때문에.


    변수의 정의 : 이름name, 속성attribute의 집합(대표적 속성 : 자료형, 크기), 
    참조Reference(값이 저장된 위치), 값Value 4가지 요소로 구성되어 있다.

    식별자 identifier : 제한된 길이의 영문자/숫자로 구성된 변수의 한 요소.


    변수 표기법
        정적바인딩 / 동적 바인딩 
        정적 : 코딩, 프로그래밍, 링크, 
        동적 : 실행 시.


        함수 안에 생성된 지역 변수 = 준 동적 변수.


    바인딩 = 이름에 어떤 속성을 연결하는 과정. 추상화는 이름 또하는 식별자를 사용한다.

    ex) 이름 n에 상수 라는 속성과 5라는 값이 바인딩 됨.

    바인딩 시간? 바인딩이 이루어지는 시간.
    바인딩 시간의 종류= 정적 + 동적 =
        언어 정의 시간, 구현 시간, 번역 시간 -> 정적
        + 실행 시간 -> 동적



-소프트웨어분석및설계


    WebGL
    Web Graphics Library
    
        opengl 기반. 브라우저의 html 캔버스에서 렌더링하여 3D 웹 컨텐츠를 제작할 수 있다.
        GPU에서 실행되는 js나 셰이더 코드로 구성되어 있다.
        다른 html 요소들과 혼합될 수 있고 페이지의 다른 부분과 섞일 수 있다.

    유니티는 크로스 플랫폼을 지원하기 때문에 설정에서 간단하게 설정하여 web을 비롯한 플랫폼에서 빌드할 수 있다.

    기존에 학습하였던 내용을 다시 활용하여 Goal 오브젝트 생성 시 좌표를 랜덤하게 설정하였고,
    webGL빌드를 하여 크롬 브라우저에서 실행해보았다.

    프로젝트를 하나 더 빌드하여 플레이어 오브젝트가 장애물 wall 오브젝트를 지나쳐감에 따라 새로운
    wall 오브젝트를 spawn 시키는 스크립트를 짜 보았다.


