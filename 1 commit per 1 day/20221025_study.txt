20221025_study

-인공지능 중간 범위

인공지능

        ' , ' 컴마로 분류된 데이터들을 csv 엑셀 파일로 저장.
        저장된 파일을 읽어들여 도식화할 수 있다. 
        사용 언어는 파이썬, 함수는 plot.

        import pandas as pd
        -> pandas라는 모듈을 pd라는 이름으로 불러온다.

        data_f = pd.read_csv('plant_diary')
        -> pandas 모듈의 read_csv 함수를 활용하여 'plant_diary' csv 파일을 읽어서 data_f 에 저장한다.

        plot(data_f, '날짜', '잎 너비', '주인')
        -> data_f의 데이터 중 날짜를 x축으로, 잎 너비를 y축으로 주인에 따라 색상을 다르게 하여 도식화 출력하기. (점 분포 그래프)

        이렇게 그려진 그래프에서, 앞으로 그려질 범위를 기존 데이터를 통해 대략적으로 유추할 수 있다.

        이를 기계를 통해 구현한 것이 인공지능이고, 학습을 머신러닝이라고 한다.


        오늘은 plant-dairy-original-simple을 통해 학습. 
        (*영상에서는 original이 아니라 simple이었으나 해당 코드 페이지를 찾지 못해 유사 페이지로 대체하여 학습 진행함)
        
        kaggle에서는 한줄씩, 혹은 전체를 한번에 코드를 실행하여 수행 결과를 볼 수 있다.

        violinplot : 바이올린 모양으로 plot도식화를 해주는 함수.

        violinplot(data_f, 'date', 'leaf_width')
        ->data_f에서 정보를 불러들이는데, date를 x축으로 leaf_width를 y축으로 삼는다. 색상은 자동으로 구별된다.

        ex) 사람의, 성별에 따른 키/몸무게 분포를 보고 싶다면?
        violing(data_f, 'sex', 'height/weight')


        여성의 키/체중 그래프가 보다 아래쪽에 분포하고 있는 모습을 볼 수 있다.

        데이터 분할하기
        A, B = split(data_f)
        -> A와 B로 data_f를 분할. 영상에서는 7:3으로 분할되었으나 분할 비율 설정 방법은 별도로 찾아볼 예정.

        gildong = DecisionTreeClassfier()
        gildong.fit('학습용 문제', '정답')
        -> 학습용 문제를 주면 정답을 맞추는 의사결정트리 학습 모델 gildong

        prediction = gildong.predict('테스트용 문제')
        ->학습된 gildong으로 '테스트용 문제'를 예측한다.


    -머신러닝이란? 데이터를 주고 컴퓨터에게 스스로 학습하도록 한 것.
    -여기에 사람이 직접 데이터에 따른 결과값을 수정해가면서 보조한 것이 인공지능
    -딥러닝은 사람의 뇌를 모방한 신경망 학습 기법을 말한다.



    도표 상의 데이터들을 분류하는 선 = 결정 결계
    이를 찾는 알고리즘 = 논리 회귀 알고리즘

    선 여러개 (조건이 추가로 생기면)= 결정 트리 알고리즘


    머신 러닝 분류 알고리즘
    -SVC 서포트 벡터 머신
    -DecisionTreeClassfier 결정트리
    - 랜덤 포레스트
    -XGB Classfier , Boosting or Addtive Training
    -Logistic Regrssion
    -Multilayer Neural Networks
    -CNN/RCNN/GCNN

    -학기 주제를 하나 선정해서 사이트에 올리고, 
        kaggle에서 데이터를 찾아 직접 학습시키고 발표하기.

    -간단한 파이썬 프로그램 작성과 기능 모듈화
    -파이썬은 변수를 별도로 선언할 필요가 없다.

    -시험나올가능성 높음
        : 어떠한 함수 xxx를 만들었을 때, 해당 함수가 있는 파일 xfile에서 코드를 실행하면 
        main 함수에서 해당 함수 xxx를 호출해도 잘 작동하지만, 그 외의 파일에서 코드를 실행하면
        에러가 발생한다. import해준다 해도 이 경우 함수의 이름은 xxx가 아니라 xfile.xxx가 되기 때문이다.




   *파이썬에서는 변수가 값을 처음으로 할당할 때에만 만들어진다.

    -코드 뿐만 아니라 데이터(변수)까지도 하나로 묶어서 간단히 표현한 것이 추상화.
        코드를 묶으면 코드 추상화
        변수를 묶으면 변수 추상화
        둘을 합해서 데이터 추상화.


        그렇게 묶어서 만들어진 것을 추상자료형이라고 한다.


    -라이브러리화
        자주 사용하는 함수가 담긴 클래스들을 모아서 자신만의 라이브러리를 갖추거나, 
        혹은 그렇게 만들어진 다른 사람의 라이브러리를 가져와 사용할 수 있다.

        어떤 기능들을 모아 별도의 ABC라는 파일에 저장한 뒤, 이를 라이브러리 폴더로 옮기고, 
        (*혹은 가져오고)

        설정에서 라이브러리 폴더를 추가한 뒤에,
        import ABC

        를 통해 가져오는 것이 일반적이지만, 이 경우 해당 변수나 함수 사용 시 앞에 ABC. 을 붙여야 한다.
        XXX가 너무 길다면
        import XXX as Y 
        이렇게 Y. 으로 간소화할 수도 있다.

        그 뒤에 클래스 명 XXX까지 붙여야 하는 게 귀찮다면,

        ABC 파일의 XXX라는 클래스를 

        from ABC import ZZZ

        이렇게 해주면 앞에 별도로 안붙이고 라이브러리 내 파일의 클래스 내 변수,
        혹은 함수를 바로 사용할 수 있다.

    -머신 러닝 코드를 실행하는 법
        1. Kaggle.com에서 바로 실행하기
        2. Google Colab을 통해 실행하기. -> 구글드라이브에 파일 업로드하여 사용
        3. 자신의 PC에 Anaconda를 설치하여 실행하기
        4. 혹은 Pycharm을 설치하여 실행하기.

        머신러닝 코드 jpynb 주피터 노트북을 파이썬으로 변환하는 법.
        jupyter nbconvert --to script filename.ipynb



    data_frame = mf.load_csv('male_female.csv')
    를 통해 csv 파일을 읽어들여 변수에 저장하고,

    mf.show_cols(data_frame)
    를 사용하여 제대로 불러왔는지 확인한다.

    각종 함수들이 정의된 파일을 받아 라이브러리에 넣고,
    import하여 사용하였다.

    점 분포도, 막대그래프, 바이올린플롯, heatmap으로 데이터를 나타내어 보았다.
