20221208_study


컴퓨터일반


    11장? 멀티미디어
        03. 멀티미디어의 응용 기술

            1. 3차원 컴퓨터 그래픽스
                -표현 방식
                    -폴리곤
                    -넙스 nurbs : 폴리곤 보완. 적은 개수의 제어점. b-spine 보간법 

            2. 가상현실
                : 가상공간, 기계와 상호작용을 통해 몰입감 입체감을 느낄 수 있게 함.

            3. 증강현실
                :실제 호나경에 가상 사물을 합성(투영)시킴. 


    12?장 인공지능

        01. 인공지능의 개요
            1. 인공지능의 개념
                : 인간의 지적 능력을 인공적으로 구현. 사람처럼, 사고, 학습, 자기계발 등을 컴퓨터로 구현하는 기술.

                목적 : 컴퓨터가 인간의 지능적인 행동을 모방하게 하는 것.

            2. 강인공지능과 약 인공지능의
                강 : 인간의 행동을 인간과 유사한 방법(지능)으로 구현하는 시스템
                약 : 인간의 특정 행위 결과만을 모방하는 시스템

            3. 튜링 테스트
                : 기계의 지능 보유 여부를 판별하는 테스트.

                평가자 A가 커튼에 가려진 B, C 개체와 자연어로 대화를 나누어,
                    누가 인간이고 컴퓨터인지 분별할 수 없으면 지능을 가졌다고 판단할 수 있다.

            4. 인공지능의 역사   ->인공지능 기반은 신경망임.
                시작 = 1940~1950  
                기대 및 좌절 = 1960~1980년대 초
                부흥 = 1980년대~현재


        02. 인공지능의 세부 분야

            1. 지식 표현

                지식: 정보+데이터 포함하는 개념
                지식 표현 : 지식 정보 데이터를 사용하기 쉽게 표현한 것.

                의미 네트워크 방법 : sematic network. 자연어 처리에서 나온 의미 해석 결과나 
                질문 응답 시스템의 지식 표현 등에 사용되는 네트워크형 데이터베이스.
                노드와 엣지를 이용한 네트워크 상 방향성 그래프로 지식을 표현함.

                규칙 기반 방법 : 조건문 형태로 조건과 결론을 표현하는 규칙들을 추론한 뒤,
                새로운 사실을 생성하는 방법. 전문가 시스템에서 주로 쓴다.

            2. 전문가 시스템 epxert system : 특정 분여의 전문가 지식을 모델링. 다양한 규칙 기반.
                지식 기반, 추론 엔진, 사용자 인터페이스 등으로 구성돔

            3. 탐색
                : 문제 공간 내에서 적합한 해답을 찾아가는 해결 방법

                    트리 기반 탐색 기법이 매우 할발하게 쓰임. 특히 '게임 트리'


        03. 기계학습


            1. 기계학습의 개념
                : 문제에 대한 정의만 컴퓨터에게 설명. 기타는 자체적으로 학습하여 해결하도록 함.
                목적 : 인간의 지능을 기계로 구현


            2. 기계핛브의종류
                -지도 학습 
                    : 쩡답이 있는 학습 데이터에서 어떤 일관된 규칙을 찾는 것.
                    -회귀 분석

                -비지도 학습 
                    : 데이터만 제공한 뒤 그 안의 정보를 찾게 하는 것. 클러스팅이 대체적.

                -강화학습 
                    : 반복적 학습을 통한 정보 도출. 학습 알고리즘이 수행한 행동에 대해 보상을 받는 식.


        04. 인공신경망 ANN, Artifitional Neural Network

            1. 개념 : 인간의 뇌 구조에 착안하여 만든 학습 기법.
                뉴런과 시냅스로 이루어진 뇌 구조를 흉내냄.
                뇌의 동작 방식을 모델화 한 병렬 정보 처리 시스템.

            2. 구조
                동그란 원이 하나의 뉴런. 이들 간 서로 복잡하게 연결하여 신경망을 구성한다.
                왼쪽 


            3. 퍼셉트론
                점그래프. 구분선.
                구분선을 찾는 과정 = 학습. 
                
                노드의 기본 연산은 입력 값의 가중합이다.

            4. 다층 퍼셉트론
                등장 배경
                    : 퍼셉트론의 입력 값들은 선형분리 함수라고 볼 수 있음. 
                    단층 하나로는 퍼셉트론을 제대로 기능할 수 없다.
                    n차원의 입력값을 분리하는 함수는 n-1차원이 된다.
                    이러한 비선형 분리의 해결을 위해 다층 퍼셉트론이 필요하다.

                하나의 선형 함수(단층)으로 구분할 수 없는 문제를 여러개의 퍼셉트론을 결합(다층)하여 값을 얻는다.


                딥러닝은 이런 다층 구조 신경망 기반으로,
                    다량의 데이터를 높은 수준의 추사와 모델로 구축하는 방법에 대해 연구중이다.




            다음주 월요일 강의 정상적. 논리 회로 함.
            화요일 강의. 좀 일찍 끝냄. 시험 직전. 시험 관련 얘기도 좀 함.


프로그래밍언어

    CH.10

        연산자 중복 표현

    
        포괄 기능 Generic Functions

            -포괄 프로시저

                -하나 이상의 요소를 매개변수로 받아들여 실 프로시저를 생성할 수 있는 프로시저 틀 template
                -컴파일 시간에 실 매개변수가 대체되어 실제 프로시저를 발생.
                -코딩의 오류 감소
                -프로그램의 길이 축소
                -추상화 개념 제공

            -Ada의 서브 프로그램이나 패키에서 사용되는 포괄 설비

                -매크로의 확장된 개념임.
                -Ada의 포괄 프로그램 = 프로그램 생성 틀 template
                -실제 프로시저 = 번역 시 정적 생성 instantiation

            
            -포괄 프로시저 SWAP에 중복 표현을 함께 사용
            
            -포괄 기능 제공 설계 시 고려 사항
                -매개 변수화 될 자료형 사용 가능 연산은?
                    -Ada에서는 프로시저, 펑션, 패키지로 나뉘어짐.

        코루틴 Coroutine

            : 호출된 프로그램의 수행이 완전히 끝내기 전에 다른 프로시저(*호출 프로시저 포함)로 제어를 넘겼다가, 
                재실행resume할 수 있는 프로시저.

            -특징
                -코루틴은 제어를 넘겨 받으면 프로시저의 일부만 실행
                -제어의 반환은 실행 일시 정지
                -후에 제어를 받으면 정지된 위치에서 실행 재개
                -프로시저들 간의 관계가 주종 관계가 아님


            -Courutine A에서 resume B 문장 실행 단계

                1. A의 resume 문장 다음 위치를 A의 제어 장소에 기억
                2. Coroutine B의 실제 실행 위치를 알기 위해 B의 제어 장소의 값 참조
                3. B의 제어 장소의 참조된 값으로 제어 분기

                    코루틴 이상 체계 시뮬레이션 언어의 범주에서취급한다.
                    경우에 따라 자연스러운 알고리즘을 제공한다.
                    기존 언어에서 시뮬레이션으로 간단히 해결(대체)할 수 있다.


    CH.11 추상 자료형

        소개

            -추상 자료형, 자료 캡슐화

                -자료를 연산과 함께 선언
                -정보 은닉 개념 도입을 통해 readability 증가
                -구현 종류 : class, cluster, flavor, form, modula, pacakge, structure ...

            -추상화 
                -일부 속성만으로 작업/객체들을 필요한 정도만 묘사하는 방법
                -필수적인 속성만 표현(나머지는 숨기거나 삭제)
                -유사성만 표현
                    -> 관련된 사항을 묶어 하나로 표현
                -procedure (algorithm abstraction)
                    -> 연산 추상화 제공(수행과정 묘사)
                
                추상화의 목적 : 추상화는 기계에서 일이 수행되는 구체적이고 상세한 것을 모르고도 컴퓨터의 수행작업을 쉽게 이해하도록 한다.


            -자료형 
                : 객체들의 집합 + 객체들에 작용하는 연산집합
                -연산집합 = 실체화, 구축, 소멸, 분리 연산
                -자료 추상화   
                    자로형 표현 + 연산들 = 캡술화

                -캡슐화encapulation
                    부적당한 사용을 배제하기 위한 보호막.
                        -> 창문window 제공을 통해 캡슐화된 정보 사용
                    구성 : 공개부(가시부) public, visible + 전용부 private   
                    
                    방출 export와 도입 imprt

        추상화 제공 시 고려 사항들
            
        Ada의 추상 자료형

        C++의 추상 자료형
            -객체지향 프로그래밍 지원
            -클래스 개념
            -멤버 함수
            -생성자
            -소멸자
        
        수학적 추상화 명세

            -자료의 이상적인 추상화 기술 기법
            -자료형에 대한 일반적 형태의 정의
