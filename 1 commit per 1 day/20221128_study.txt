20221128_study


-정보보안
    -CH.9 summary

        보안 메커니즘의 특성

            -응용 분야 자체에 대한 보안용 설계

            -다음의 긴으을 통해 secure & private IP 망을 운용 가능

                -신뢰할 수 없는 사이트 접근 차단

                -나가는 패킷 암호화 

        IP 계층 보안

            IPsec 기능 3가지
            -인증  **
                : 수신 패킷이 정말로 파일 헤더 안에 들어있는 발신지로부터 온 것인지 확인
            -기밀성  **
            -키 관리  **

    9.1 IP 보안 개요

        IAB 인터넷 아키텍쳐 보드
        -인터넷 구조 보안 보고서 1994년


        IPsec 응용

        IPsec 기능*

            -인터넷을 통한 안전한 지사 사무실 연결
            -인터넷을 통한 안전한 원격 접근
            -협력 업체와의 인트라넷과 엑스트라넷 구축
            -전자상거래 보안 강화

        IPsec 보안 영역
            -IP 계층에서 모든 트래픽에 대한 암호화와 보안 기능 제공

        IPsec 장점 

            -투명성 제공?


        라우팅 응용

            -IPsec이 보장하는 내용

        IPsec 서비스

            -보안ㅇ르 제공하기 위해 두가지 프로토콜 사용.

                인증헤더 프로토콜 / 보안페이로드 캡슐화

            -IP(=네트워크)계층에서 서비스 제공함.

        전송모드

        터널모드

            -IP패킷 전부를 보호
            -전체 패킷과 보안 모드


    9.2 IP 보안 정책

        다음시간에.


-컴퓨터일반

    -컴퓨터능력활용시험 자료 배포
     간단하게 설명. 함수 비중이 40점. 모르면 무조건 불합격함



        01. 인터넷.
            5. 인터넷의 활용

                FTP

                전자상거래

                HTMl(5)

            
        02. 모바일

            1. 모바일 컴퓨팅의 발전
                -국내 모바일 컴퓨팅 기술의 발전 단계
                    1. 1980~ 인터넷 상용화 이전
                    2. 1990~ 유선 인터넷과 데스크톱 중심
                    3. 2000~ 무선 인터넷과 스마트기기가 중심으로 바뀌는 단계
                    4. 2010~ 무선통신, 모바일기기, 센서 등이 발전한 단계.

                -모바일 컴퓨팅을 가능하게 하는 필수 조건
                    1. 고속 네트워크
                    2. 모바일 하드웨어
                    3. 모바일 소프트웨어
                    4. 
                    5. 

            3. 모바일 응용체제 
                : 안드로이드, IOS

                안드로이드는 오픈소스. IOS가 정전식 멀티터치를 먼저 채용함.


            4. 무선 네트워크 기술

                -이동통신 : 모바일 기기에서 데이터를 전송할 수 있도록 
                    파장이 같은 고주파를 이용하는 무선 네트워크 기술이다.

                이동성을 위해 서비스 제공 지역을 여러 셀로 나누어 이동할 때는 핸드오버 기술을 사용.
                    1G  ->2G CMDA, GSM -> 3G WCDMA  ->4G LTE

                    2020년부터 상용화될 5G에서는 인공지능 IoT 빅데이터 클라우드 기술들을 통해 
                        초연결 초지등 초융합 사회를 구현할 수 있을 것이다.

                -와이파이 : 무선LAN 연결 기술. 점점 더 빠른 속도와 높아지는 보안 수준 제공.

                -블루투스 : 블루투스 SIG에서 표준 정의. 일부 보안 취약성 존재.

                -NFC : 결제, 교통카드 등에서 쓰임. 저속, 저전력.
 
                -RFID : 태그, 라벨 카드. 재고관리와 물류 분야에서 광범위하게 사용됨.

                -지그비

                -와이기그

        03. 사물인터넷

            1. 사물인터넷의 개념
                : 통신망으로 연결되어 있어 누구든지 인식 가능하며 자체 주소를 지정할 수 있는 
                    물리적 사물로 구성된 광범위하고 자기 조직적인 네트워크.


            2. 사물인터넷의 기술
                -임베디드
                -센싱
                -유무선 네트워크
                -서비스 인터페이스


            3. 사물인터넷의 활용

                -스마트 헬스
                -스마트 에너지(그리드)


        보강 (정보보안 = 월요일) 
        8일 10일 13일 보강


    -새 챕터 = 정보보안

        01. 정보보안의 개요
            1. 정보보안의 개념
                : 정보를 위협으로부터 보호하는 것.
                정보의 훼손 변조 유출등을 방지함.

            2. 정보보안의 필요 요소
                -기밀성
                    : 허락된 사용자만 정보 자산에 접근할 수 있도록 하는 것.

                -무결성
                    : 권한을 가진 사용자만 허가받은 방법으로 전보를 변경할 수 있도록 하는 것. 
                    위변조 방지 목적이다.
                -가용성
                    : 사용자가 필요로 할 때 접근이 가능해야함.
                    DDOS, 재해 방지 목적이다.

            3. 정보보안의 위협 요소
                -우발적 위협 (조작자 실수, 하드웨어 고장, 소프트웨어 오류, 자료의 오류, 자연 재해)

                -악성 코드

                -해킹 (디도스, 스푸핑, 스니핑)

            4. 분야별 정보 보안 요소
                -웹 보안
                -스마트폰 보안
                -산업 보안
                -금융 보안

        02. 악성코드

            1. 개념 
                : 제작자가 사용자에게 피해를 주기 위해 의도적으로 만든 프로그램.
                컴퓨터에게 악 끼칠 수 있는 모든 소프트웨어를 말함.

                특정 사이트 접속, 불법 소프트웨어 다운로드, 악성 이메일 등의 방식으로 감염됨.

            2. 악성코드의 분류
                -바이러스 : 기생
                -웜 : 독자적
                -트로이목마 : 자가 복제 능력이 없다. 정상처럼 보이지만 악성을 포함한 프로그램.

                목적에 따른 분류
                    -스파이웨어
                    -애드웨어
                    -랜섬웨어
                    -스캐어웨어

        03. 해킹
            1. 해킹의 개념

                해커는 원래 뛰어난 기술자로 내부 구조를 깊이 연구하는 사람을 말했음.


            2. 해킹의 종류
                -디도스 : 네트워크를 통한 트래픽 공격
                -스푸핑 : 
                -스니핑 : 엿봄

        04. 정보보안기술 = 다음주


-프로그래밍언어

    CH.8 영역과 수명

    주요 언어에서의 영역 규칙
        -Fortran

        지역 변수 = 프로그램 (subroutin, function)내에 선언 된 묵시적/명시적 변수
        전역 변수 = 프로그램 안밖에서 COMMON문으로 선언된 변수


        -JOVIAL
            알골58의 후계자
            미국방성에서 주로 사용했었음(요즘은 ADA)
            블록 중심의 정적 영역 규칙 (*정적 = 컴파일 시간에)
            분리 컴파일 허용
            COMPOOL(communications pool)
            각 모듈에게 자료, 프로시저, 정의 등의 공유를 제공한다.
            실행시간 매개변수 간의 형 검사 효율적인 주기억 장치 사용과 접근.

        -PL/1 
            알골60의 후계자
            BEGIN. .END 도입(쁠록 개념).
            묵시적 선언 가능 -> 문제점 발생

        -Algol68
            begin...end의 개념을 일반화함.
            영역 블록 - 모든 문맥 시작 기호와 문맥 마침 기호 사이
            선언문 
                블록 입구에서 선언
                블록 끝에서 해제(영역=블록단위)

                begin을 했으면 반드시 end를 해야하고, then을 했으면 else를 해야한다.

        -PASCAL
            복합문 개념의 begin...end 개념 도입

        -C, C++, JAVA
            ALGOL처럼 블록 개념이지만, bigin...end 대신 중괄호 {}를 사용한다.

        *우리가 사용하는 언어는 영역이 가려지는 현상 = Hole in Scope 홀인스코프   
            이 생길 수 있는 언어다.

            C++와 JAVA의 장점
             변수 정의가 어디에서나 나타날 수 있다.
             

        블록구조를 통한 영역 개념의 장점
            1. 지역성 증가. -> 변수를 사용할 프로그램 가까이에서 선언하다. 
            2. OS에서 작은 작업단위 Working set 요구. 페이징 기법에서 크기가 작은 기억장소를 요구하게 된다.
            3. 표준 패키지를 사용자 프로그램에 결합하여 하나로 생성하는 데 용이하다. -> 식별자 충돌 제거
            4. 프로그램의 구성을 단계적 세분화하는 데에 유리하다.     

    변수의 수명

        수명 = 변수가 기억장소를 할당받은 기간 = 실행시간
        FORTRAN, COBOL : 정적 기억장소 할당 -> 변수 수명 = 프로그램 수명
        ALGOL60 : 블록 단위 할당과 해제 -> 변수 수명 = 블록 시작~ 블록 종료

        PL/1 의 4가지 스타일 변수. 요즘도 똑같음.
            -automatic = 일반적 지역 변수. 블록 진입~탈출까지가 수명.
            -static : 주 프로시저 진입~ 탈출까지가 수명.
            -controlled : 할당~ free 까지가 수명.
            -based(stack개념임) : 마찬가지로 할당~free까지가 수명.


    CH.09 기억장소 배당(할당)

        -기억장소 할당 기법
            : 프로그래밍 언어의 특성과 관련이 크다.

            설계 시 고려 -> Binding이 가장 중요. 

            방식 
                -정적 기억장소 할당 = 번역 시간에
                -동적 기억장소 할당 = 실행시간에
                +준동적 변수. 우리가 쓰는 언어의 기본 변수임. 

            -정적 기억장소 할당
                -번역 시간 할당(적재 시간에 실제로 할당함)
                -기억장소 크기와 위치가 정적으로 고정되어 있음
                -배열 접근코드가 효율적이다.(크기가 고정됨)
                -서브 프로그램 (한번 실행에 필요한 크기의 기억장소) -> 순환 불가
                -FROTRAN, COBOL 등에서 사용.

            -동적 기억장소 할당
                -실행시간 할당, 변수 제한 완화(자료형, 크기 등)
                -인터프리터 구현 LISP,SNOBOL4,APL에서
                -Algol 형태의 언어 -> 순환 허용

        -단위 프로그램
            -모듈 단위 프로그램 (모듈단위 = 논리적 크기다.)
                -지역 변수
                    -> 단위프로그램에서 선언하며 사용하는 변수를 말한다.
                -활성화 상태
                    -> 한 단위 프로그램의 실행 시작부터 종료까지를 말한다.
                -block 또한 단위 프로그램이다.

            -단위 활성화
                -> 한 단위 프로그램의 실행시간 상태
                -구성
                    1. 코드부 code segment (시스템프로그래밍에서 코드세그먼트, 데이터세그먼트, 스택세그먼트 그거임)
                        -> 명령어들로 구성된ㅁ다. 고정크기로 내용이 불변이다.
                    2. 활성 레코드 activation record
                        -> 지역 변수 등 프로그램 실행 시 요구되는 정보들을 말한다. 크기와 내용이 가변적이다.
            
            