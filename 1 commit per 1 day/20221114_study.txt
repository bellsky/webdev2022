20221114_study

정보보안은 동영상 강의로 대체.


	-컴퓨터일반

		알고리즘

		1 알고리즘의 개요

		1-1.

		1-2. 알고리즘의 표현 방법 

		순서도 flow chart. 기호와 선을 이용해 문제 해결에 필요한 처리 과정을 표현함. 보잡한 알고리즘 표현 시에는 그림이 복잡해져 효과가 떨어진다.


		의사코드 Pseudo Code. 프로그래밍 코드와 비슷하지만 특정 언어의 문법은 아님.


		1-3. 알고리즘의 설계 : 가장 효율적인 문제 해결 방법을 찾아내는 과정.

		제어 구조의 종류. 
			순차 구조 : 명령을 순서대로 하나 씩
			선택 구조 : 조건에 따라 명령을 선택해서 실행
			반복 구조 : 같은 동작을 여러번 반복하여 수행해야 할 때.

		알고리즘의 조건
			입력 : 0개 이상의 입력 값.
			출력 : 반드시 1개 이상 결과 값.
			유한성 : 반드시 종료되어야함.
			명확성
			실행가능성


		2. 알고리즘의 분석

		1-1. 알고리즘의 복잡도. 

		2-2. 시간 복잡도. 알고리즘의 실행-종료 사이에 필요한 시간을 측정하는 방법.

		2-3. Big-O 표기법. 알고리즘의 시간 복잡도를 표현하는 방법.
		입력된 값의 크기에 ᄄᆞ라 알고리즘 처리 횟수가 얼마나 증가하는지 나타날 때 사용.
		근삿값으로 O(n), O(n^2)


		3. 정렬 알고리즘

			선택 정렬
			버블 정렬
			삽입 정렬
			병합 정렬

		4. 검색 알고리즘

			검색  특정 데이터 집합에서 어ᄄᅠᆫ 조건이나 성질을 만족하는 데이터를 찾는 것.
			검색 알고리즘 : 검색의 개념을 활용한 알고리즘.
			종류 : 순차 검색, 이진 검색, 해싱
			
			해싱 : 산술적인 연산을 이용해 키가 있는 위치를 계산하여 그 위치로 직행하는 방법.
			해시 함수 : 키 값을 데이터 위치로 변환하는 함수. 해시테이블 : 해시 함수에 ᄄᆞ라 계산된 주소 위치에 항목을 저장한 표.



		새챕터
		클라우드

		1. 데이터베이스의 개요

		1-1. 데이터와 정보 / 정보 
		데이터 = 현실 세계에서 측정, 수집한 사실이나 값. 형식을 갖춰야 한다.
		정보 = 데이터를 체계적으로 조작해 처리한 결과물.

		정보 처리 = 데이터에서 정보를 추출하는 과정이나 방법.
		정보 시스템 : 데이터를 저장하고 있다가 필요할 때 유용한 정보를 산출해주는 수단.
		데이터베이스 : 유용하고 활용도가 높은 정보를 정확히 추출할 수 있도록 데이터를 대신 관리해 주는 것.

		1-2. 데이터베이스의 개념.
		: 관련 데이터들을 모아두는 창고. 운영 데이터의 집합.
		정의 4가지.
		공유 데이터
		통합 데이터
		저장 데이터
		운영 데이터

		특징 4가지.
		실시간 접근 가능
		지속적인 변화
		동시 공유 가능
		내용 참조 가능

		
		1-4. DBMS 데이터베이스 관리 시스템.
		DB에 대한 전반적인 관리를 담당한다.
		DBMS의 특징.
			자료 접근성 및 시스템 응담성 향상.
			중앙집중적 자료 통제
			데이터 중복성 최소화
			데이터 독립성 유지
			데이터 보안성 보장
			데이터 일관성 유지
			데이터 무결성 유지


		2. 데이터 모델
		2-1데이터 모델의 개념
		: 데이터를 데이터베이스에 저장하는 구조. 자료구조, 연산, 제약조건으로 구성됨.
		데이터 모델의 종류 :
		-계층형 데이터 모델
		-관계형 데이터 모델


		3. RDMBS
		3-1. RDBMS : 관계형 데이터 모델을 기반으로 하는 데이터의 집합.

		기본용어
		-튜플
		-속성
		-도메인


		3-2. 제약조건
		-무결성 제약조건. 일관성이 손상되지 않도록 보장해줌.
		3-3 관계형 데이터 연산
		-관계 대수 (연산자의 집합)
			-일반 집합 연산자 (합 교 차 카디젼곱)
			-순수 관계 연산자


		4. 빅데이터

		4-1 빅데이터 등장 배경
		: 기존 데이터 처리 분석 기법으로 감당하기엔 너무 커짐.

		4-2. 빅데이터의 개념
		:기존의 DB로는 처리하기 어려운 많은 양의 정형/비정형 데이터들.

		4-3. 빅데이터의 활용






	프로그래밍언어론

	CH.6 변수, 바인딩, 식 및 제어문

	조건문

		포트란 : GOTO 문 요구, 판독성 저하.
		ALGOL80 : 택일문 처리, dangling else 발생

		다중IF의 새로운 구문 형태
			다수의 endif 사용을 줄이고 새로운 구문 형태 도입.

			-> algol68의 elif, Ada]의 elsif

	Case문 
		=if-then-else를 확장한 택일문.
		Ada에서 other절을 도입하여 열거형과 부분범위형 사용 가능.

		CASE 문에서의 고려 사항.
		선택자수식으로 허용된 자료형은 무엇인지,
		case label에 허용되는 자료형은 무엇인지,
		...


	반복문
		:일정한 루틴의 반복 수행. 컴퓨터의 중요 특성.
		종류 : 초기, 가장 간결한 형태 -> 괄호 사용. long-repaet moon.
			,탈출은 goto나 exit(제한적 go to) 사용.

			-for (반복제어변수사용))(포트란에서는 DO)
			-조건 while 
			-최소 한번 실행 후 조건 do while (reapat – until?)

	GOTO문
		label 제어의 모든 문장을 지칭함.
		기계어 특성그대로 표현하기에 효율적 실해잉 보장됨.
		사용이 편리함. 다른 제어문 없이 모든 알고맂믕르 표현할 수 있으므로.

		GOTO문의 장점 :
			제어구조를 하드웨어가 제공. 범용성이 좋음.
		단점 : 프로그램 질 저하 유도, 판독성 저하, 프로그램 유지보수의 난해성.

		GOTO의 잔존 여부는 논란의 대상.
		포트란, 베이직의 IF문이 GOTO문.
		순수 LSIP와 Bliss는 GOTO문 사용 금지,
		PASCAL은 제한적 사용.

		GOTO문을 제거하면 다양한 순서 제어문이 필요하다.



	CH.7 자료형


	자료형과 형 선언

		자료형 = 객체 집합 + 연산.
		자료형의 범주
			-내장 자료형(표현법, 연산)
			-사용자 정의 자료형
			-기본 자료형

		자료형 기법
			-자료형을 정의하고, 변수를 특정 자료형으로 선언하는 설비.
			-FORTRAN같은 구형 언어에서는 빈약한 제공, 최근 언어에서는 좀 다양함.

		변수의 자료형 선언
		
		자료형에서의 쟁점 사항
			-바인딩 시점(번역시간, 또는 실행시간과 관계)
			-자료의 적법성과 동치 관계
			-자료의 매개변수화와 매개변수의 평가 시점
			-자료형의 구성원 -> 영역 domain 구성
			-자료형의 영역이 상수 값들인 경우 -> 스칼라형

	기본 자료형

		수치형
			-기본 자료형 (실수와 정수)
			-구현 의존적(기계적 특성에 대해) -> 연산을 빠르지만 호환성 문제 발생
			-Ada -> 수치값을 명시적으로 제한함.
				-> 동일한 기 정의된 함수 MAX_INT, MIN_INT 도입.
				-> short integer, long integer
				-> 실수 : 유효숫자 자리수, 값의 범위, 실수 사이의 증분값 등에 대한 선언 가능
					->floating number != real number.

				



