20220927_study

금일 강의는 정보보안과 인공지능 2개.



-정보보안 20220927

    -3장 공개키 암호화 메시지 인증 

    3.1 일방향 해시함수(one-way hash function) 
    : 메시지 인증 코드처럼 임의크기의 메시지 M을 입력을 받아들여 
    일정한 크기의 메시지 다이제스트 H(M)을 출력하는 함수
        해시=H(M)
        H: 해시함수
        M: 메시지
        MAC과는 달리 비밀키가 필요없음

    3.2 Secure Hash Funcuntions

        -해시 함수의 용도
            :메시지 인증, 디지털 서명
        -파일, 메시지, 데이터 블록에 대한 지문=fingerprint를 생성

        SHA = 안전한 해시 알고리즘


        -해시 함수의 요건

            1. 임의(=아무) 크기의 데이터 블록에 적용될 수 있어야함.
            2. 고정된 길이의 출력을 가져야 함.
            3. 계산 용이성과 구현 가능성을 갖춰야함.
            4. 일방향(단방향) 성질을 갖춰야함. y를 통해 x값을 계산할 수 있어서는 안된다. 
            (= preimage 저항성. 해시값으로 원문을 알아낼 수 없어야 한다.)
            5. 약한 충돌 저항성 = 2차 preimage 저항성. 동일한 해시값을 임의로 만드는 것이 불가능해야 한다.
            6. 강한 충돌 저항성 : f(x1)=f(x2)인 두 입력값 x1, x2를 찾을 수 있는 일을 방지하는 것.



        단순 해시 함수 
            -비트별 XOR

        단순 해시 함수 문제 해결법
            반전 후 대칭 연산? 차후 다시 봐야함.



        SHA 안전 해시 함수

            :최근 가장 널리 쓰임.

            SHA-1은 md4에 기초. 2005년에 NIST 승인 취소됨.

            SHA-2는 1과 하부구조가 동일하다.
                SHA-256, SHA384, SHA-512. 동일 구조에 비트수만 늘어남.

            SHA-3 
                : SHA-224. 오히려 비트수가 줄어들었다.


            

            처리단계 5단게.

                1. 패딩 비트 붙이기 (1100비트의 경우 : 2^단위에서 빼야하는데, 128bit 패딩비트를 붙이지 못하므로, 2048 비트 중 1100이 메시지, 910이 패딩, 128이 해시가 된다.
                2048 기준으로 
                2. 길이 붙이기 (패딩하기 전의 길이를 원문에 붙인다.)
                3. MD 버퍼 초기화 (버퍼를 8개의 64비트 레지스터로 나타낸다. 해시 함수의 중간값과 최종값을 저장하기 위해 .
                4. SHA-512를 사용하는 메시지 다이제스트 생성	과제 : 학번 등으로 메시지 다이제스트 만들어서 제출하기.
                5. 추가 공부 필요.


-인공지능
   *파이썬에서는 변수가 값을 처음으로 할당할 때에만 만들어진다.

    -코드 뿐만 아니라 데이터(변수)까지도 하나로 묶어서 간단히 표현한 것이 추상화.
        코드를 묶으면 코드 추상화
        변수를 묶으면 변수 추상화
        둘을 합해서 데이터 추상화.


        그렇게 묶어서 만들어진 것을 추상자료형이라고 한다.


    -라이브러리화
        자주 사용하는 함수가 담긴 클래스들을 모아서 자신만의 라이브러리를 갖추거나, 
        혹은 그렇게 만들어진 다른 사람의 라이브러리를 가져와 사용할 수 있다.

        어떤 기능들을 모아 별도의 ABC라는 파일에 저장한 뒤, 이를 라이브러리 폴더로 옮기고, 
        (*혹은 가져오고)

        설정에서 라이브러리 폴더를 추가한 뒤에,
        import ABC

        를 통해 가져오는 것이 일반적이지만, 이 경우 해당 변수나 함수 사용 시 앞에 ABC. 을 붙여야 한다.
        XXX가 너무 길다면
        import XXX as Y 
        이렇게 Y. 으로 간소화할 수도 있다.

        그 뒤에 클래스 명 XXX까지 붙여야 하는 게 귀찮다면,

        ABC 파일의 XXX라는 클래스를 

        from ABC import ZZZ

        이렇게 해주면 앞에 별도로 안붙이고 라이브러리 내 파일의 클래스 내 변수,
        혹은 함수를 바로 사용할 수 있다.

    -머신 러닝 코드를 실행하는 법
        1. Kaggle.com에서 바로 실행하기
        2. Google Colab을 통해 실행하기. -> 구글드라이브에 파일 업로드하여 사용
        3. 자신의 PC에 Anaconda를 설치하여 실행하기
        4. 혹은 Pycharm을 설치하여 실행하기.

        머신러닝 코드 jpynb 주피터 노트북을 파이썬으로 변환하는 법.
        jupyter nbconvert --to script filename.ipynb


