20220928_study


금일 강의는 3개. 프로그래밍언어론, 프로젝트랩스, 소프트웨어개발및분석


-프로그래밍언어론

    -CH.4 프로그래밍언어의 구문과 구현 기법


        -컴퓨터시스템이란? 프로그램을 저장하고 실행할 수 있는 알고리즘과 자료구조들의 전역집합.

            실제 컴퓨터 = 하드웨어

            시뮬레이티드(버츄얼) 컴퓨터 : 프로그램을 통해 컴퓨터를 시뮬레이션

            -> 고급 언어 프로그래머는 컴퓨터를 가상의 고급 언어 컴퓨터로 간주한다.


        -언어에 필요한 것. 문자. 영어의 알파벳, 한국어의 한글, 

         -언어구문=프로그래밍 언어의 기본 문자 집합.

            알파벳문자 26개 +아라비아숫자 10개 +a
            (*26or52+10+특수 n개)(포트란이 대문자 26+10+13)


            기타 문자들을 합해도 보통 2^7 128개로 표현이 가능하다.
            ASCII 아스키코드가 그래서 7비트.
            알파벳 52 숫자 10 기호 33 제어 33 = 128,
            패리티 +1 해서 8비트 사용.

            요즘은 패리티 빼고 8비트 채워서 여러 기호들로 채워서 사용한다.


            아스키보다 먼저 나온게 IBM EBCDIC.

            2000년대 들어서는 2바이트, 16비트의 UNICODE를 사용한다. ISO표준 규격.


        -정합순서
            :문자 또는 문자열에 대한 일반적인 순서 언어. A+1=B, 
            -> 문자 정렬이 가능해진다.
            언어 구현 시에 결정된다. 프로그래머가 임의로 정의할 수 있다.


        -어휘lexical 구조 용어
            -어휘토큰, 어휘요소element,어휘단위unit
                ->기본 의미 단위를 표현하는 한 개 이상의 프로그래밍 언어의 알파벳 문자로 구성된 문자열

            -언어 구성자
                ->한 개 이상의 어휘lexical 토큰으로 형성되며 구문적으로 허용된 프로그램의 일부.
                토큰이란 쪼갤 수 없는 의미를 가진 가장 작은 언어의 단위. ex) if, printf 등.


-프로젝트랩스
    : 금일 강의는 카카오 특강.

    주제 : 엔지니어/개발자에게 회복 탄력성이란?

    개발자에게 필요한 하드스킬 = SW공학, 코딩.

    그렇다면 소프트스킬 = ??

    1. 사고방식. 성장형/고착형

        : 성장형 사고방식이란 인내와 노력을 통해서 능력과 지능을 개발할 수 있다는 믿음.
        기술분야에서 핵심 사항. 평생학습 때문에.


    2. 자기 효능감 =/= 자심감. 교육학에서는 다른 의미.

        : 자신의 능력을 확신하는 정도를 자기 효능감이라고 한다.
        ‘특정’ 작업, 주제 또는 영역에서 성공할 수 있다는, 자신의 ‘능력‘에 대한 믿음.

        성공 가능성에 대해 영향을 미친다.


        자신감은 자기 자신에 대한 믿음이나 신뢰. 

        자신감 있는 사람도, 특정 작업 영역(코딩 등)에서는 낮은 자기 효능감을 가질 수 있다.


        자기효능감이 높은 사람은 결과나 ? 보다는 절차와 과정을 중요시 여긴다.

        자기효능감 개선방법. 
        자신에 대한 파악.
        작은 성공을 기념하기.
        다른 사람으로부터 배우기.
        부정적인 감정을 억제하기.

    3. 소속감 

        이곳이 나의 자리라고 느껴야 함.


        소속감이 높으면 효율성이 올라감.
        더 적극적으로 참가하게 되고 문제해결을 위해 노력하게됨.
        소속감을 못느끼면 퇴사하거나 프로젝트나 개발 분야 자체를 떠나버림.


        소속감은 적성도 능력도 능력에 대한 믿음도 아닌 사고방식의 일종.


        성별비같은 실질적 문제, 인종에 대한 선입견 등 때문에 소속감을 갖추는 것이 어려웠으나,
        요즘에는 다소 완화됨.

        미세긍정을 통해 소속감을 높일 수 있다.

    4. 인지적 유연성


        : 사고방식의 융통성. 변화에 민첩하게 적응하는 능력.

        [변화는 유일한 상수] 우리 삶에서 피할 수 없다.

        완벽한 계획도 없고 무조건 성공하는 일도 없다.

        열린 마음과 여러 관점에서 보는 일이 필요하다.


        유연성을 강화하는 4단계.

            1.중지 : 잠시 멈추고 문제 다시 보기.
            2.링크 : 상황을 다양한 각도에서 연결해보기.
            3.인지 : 새로운 가능성을 시각화, 대안 생각하기.
            4.행동 : 새 계획 작성하기.

        피드백을 활용하여 인지적 유연성을 기를 수 있다.

            -현명하게 피드백 받는 법.
            컴퓨터 과학 공부, 경력 쌓는 과정에서 피드백을 주고 받게 되는데,

            코드(설계)와 자신을 분리하는 기술이 매우 중요함.

            받은 피드백을 분석하고 적용. 건설적으로.

            외부 피드백은 새로운 관점을 제공할 수 있다.

            대신 피드백이 효과적인 피드백인지 확인해야 한다.


-소프트웨어개발및분석

    오늘 주제는 유니티 실습 - 공튀기기.

    새로운 프로젝트에서 다시 3D 오브젝트- 공을 생성하고,
    발판을 만들고, 둘에 충돌 인자를 연결해주고,
    크기와 비율을 재설정하고, 
    Physics 설정과 중력 설정, 마찰력 및 bounceability 설정을 통해 공을
    계속 튕길 수 있게 만듦.

    스크립트를 활용하여 렌더링을 비활성화 해보기도 하고,
    마우스 움직임과 발판 움직임을 연동하여 발판을 움직여보기도 하고, 
    마우스 움직임에 따른 발판 이동 정도의 비율 또한 조정해보았다.

    